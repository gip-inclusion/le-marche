# Generated by Django 5.1.11 on 2025-10-09 05:00

import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import shortuuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("siaes", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailGroup",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("display_name", models.CharField(blank=True, max_length=255, verbose_name="Nom")),
                ("description", models.TextField(blank=True, verbose_name="Description")),
                (
                    "relevant_user_kind",
                    models.CharField(
                        choices=[
                            ("SIAE", "Structure"),
                            ("BUYER", "Acheteur"),
                            ("PARTNER", "Partenaire"),
                            ("INDIVIDUAL", "Particulier"),
                        ],
                        default="BUYER",
                        max_length=20,
                        verbose_name="Type d'utilisateur",
                    ),
                ),
                (
                    "can_be_unsubscribed",
                    models.BooleanField(default=False, verbose_name="L'utilisateur peut s'y désinscrire"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Conversation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "uuid",
                    django_extensions.db.fields.ShortUUIDField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        default=shortuuid.uuid,
                        editable=False,
                        unique=True,
                        verbose_name="Identifiant UUID",
                    ),
                ),
                (
                    "sender_encoded",
                    models.CharField(
                        db_index=True, max_length=255, unique=True, verbose_name="Identifiant initiateur"
                    ),
                ),
                (
                    "siae_encoded",
                    models.CharField(db_index=True, max_length=255, unique=True, verbose_name="Identifiant structure"),
                ),
                ("version", models.PositiveIntegerField(default=1, verbose_name="Version")),
                (
                    "kind",
                    models.CharField(
                        choices=[("SEARCH", "Recherche"), ("TENDER", "Dépôt de besoin")],
                        db_index=True,
                        default="SEARCH",
                        max_length=10,
                        verbose_name="Type de conversation",
                    ),
                ),
                (
                    "sender_email",
                    models.EmailField(
                        max_length=254, null=True, verbose_name="Email de l'initiateur de la conversation"
                    ),
                ),
                ("sender_first_name", models.CharField(max_length=150, verbose_name="Prénom")),
                ("sender_last_name", models.CharField(max_length=150, verbose_name="Nom")),
                ("title", models.CharField(max_length=200, verbose_name="Objet de la première demande")),
                ("initial_body_message", models.TextField(blank=True, verbose_name="Message initial")),
                ("data", models.JSONField(default=list)),
                ("is_anonymized", models.BooleanField(default=False, verbose_name="Est anonymisé")),
                (
                    "created_at",
                    models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date de création"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Date de modification")),
                ("validated_at", models.DateTimeField(blank=True, null=True, verbose_name="Date de validation")),
                (
                    "sender_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur à l'initiative",
                    ),
                ),
                (
                    "siae",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversations",
                        to="siaes.siae",
                        verbose_name="Structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation",
            },
        ),
        migrations.CreateModel(
            name="TemplateTransactional",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, verbose_name="Nom")),
                ("code", models.CharField(db_index=True, max_length=255, unique=True, verbose_name="Nom technique")),
                ("description", models.TextField(blank=True, verbose_name="Description")),
                (
                    "brevo_id",
                    models.IntegerField(
                        blank=True, db_index=True, null=True, unique=True, verbose_name="Identifiant Brevo"
                    ),
                ),
                ("is_active", models.BooleanField(default=False, verbose_name="Actif")),
                (
                    "created_at",
                    models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date de création"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Date de modification")),
                (
                    "group",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to="conversations.emailgroup"
                    ),
                ),
            ],
            options={
                "verbose_name": "Template transactionnel",
                "verbose_name_plural": "Templates transactionnels",
            },
        ),
        migrations.CreateModel(
            name="TemplateTransactionalSendLog",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("recipient_object_id", models.PositiveBigIntegerField(blank=True, null=True)),
                ("parent_object_id", models.PositiveBigIntegerField(blank=True, null=True)),
                ("extra_data", models.JSONField(default=dict, editable=False, verbose_name="Données complémentaires")),
                (
                    "created_at",
                    models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date de création"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Date de modification")),
                (
                    "parent_content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parent_send_logs",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "recipient_content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipient_send_logs",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "template_transactional",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="send_logs",
                        to="conversations.templatetransactional",
                        verbose_name="Template transactionnel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Template transactionnel: logs d'envois",
                "verbose_name_plural": "Templates transactionnels: logs d'envois",
            },
        ),
        migrations.CreateModel(
            name="DisabledEmail",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("disabled_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="disabled_emails",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="conversations.emailgroup"),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(models.F("user"), models.F("group"), name="unique_group_per_user")
                ],
            },
        ),
    ]
